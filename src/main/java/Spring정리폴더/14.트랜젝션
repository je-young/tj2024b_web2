[ 트랜젝션 ]

    1. 정의 : 데이터베이스 에서 여러 연산(명령어)을 하나의 논리적인 작업 단계
    2. 목적 : 데이터의 신뢰성 / 안전성
        1. 데이터 무결성 보장 : 여러 연산중 중간에 하나라도 실패하면 모두 실패
        2. 원자성 보장 : 여러 연산이 모두 성공해야 결과를 반영한다.
        3. 일관성 유지 : 트랜젝션 시작 전과 종료후는 항상 일관된 상태이다.
        4. 독립성/격리성 : 다른 트랜젝션 과는 서로 독립적이다.

    3. 용어 :
        1. Transaction : 트랜젝션
        2. commit : 커밋(최종완료)
        3. rollback : 롤백(실패시 돌아가기)

    4. 사용처 :
        예시 1] 은행이체 : 유재석이 강호동 에게 100만원 이체 , !!! : 이체라는 연산을 하나로 처리 해야한다.(트랜젝션)
            유재석 계좌에서 100만원 출금하고
                ( 만일 논리적인 오류 발생하면 ) -> 유재석은 100만원을 출금하고 강호동에게 100만원 입금 안됨.
            강호동 계좌에 100만원 입금한다.
        예시 2] 주문처리 : 주문테이블 정보를 등록하고 주문상세에 정보 등록하고 재고를 차감하고 , : 주문 이라는 연산을 하나로 처리 해야한다.(트랜젝션)
            주문 테이블 insert
            주문 상세 테이블 insert
                ( 만일 논리적인 오류 발생하면 ) -> 주문 처리만 되고 재고는 차감 안됨
            주문 재고 테이블 insert

    5. 스프링에서 트랜젝션 적용하는 방법
        -> 비지니스로직( 서비스 컨트롤러 : 기능의 실질 / 중요 적인 코드 )
        1. 트랜젝션 은 주로 비지니스 로직에서 처리한다.
        2. 비지니스 로직에서 트랜젝션을 적용할 메서드 위에 '@Transactional' 트랜젝션 넣어준다.
            @Transactional 롤백 발동 조건은 'RuntimeException'
            @Transactional(rollbackFor = RuntimeException.class)